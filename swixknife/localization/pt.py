

__all__ = ('SezimalLocalePT',)


from typing import TypeVar

SezimalDate = TypeVar('SezimalDate', bound='SezimalDate')


from .lokale import SezimalLocale
from ..sezimal import SezimalInteger
from ..base import SEPARATOR_COMMA, SEPARATOR_DOT, \
    SEPARATOR_NARROW_NOBREAK_SPACE, SEPARATOR_COMBINING_DOT_ABOVE_RIGHT


class SezimalLocalePT(SezimalLocale):
    LANG = 'pt'
    LANGUAGE = 'portugu√™s brasileiro'

    SEZIMAL_SEPARATOR = SEPARATOR_COMMA

    GROUP_SEPARATOR = SEPARATOR_DOT
    SUBGROUP_SEPARATOR = SEPARATOR_COMBINING_DOT_ABOVE_RIGHT

    FRACTION_GROUP_SEPARATOR = SEPARATOR_NARROW_NOBREAK_SPACE
    FRACTION_SUBGROUP_SEPARATOR = SEPARATOR_COMBINING_DOT_ABOVE_RIGHT

    FIRST_WEEKDAY = 'SUN'

    WEEKDAY_NAME = [
        'segunda-feira',
        'ter√ßa-feira',
        'quarta-feira',
        'quinta-feira',
        'sexta-feira',
        's√°bado',
        'domingo',
    ]

    WEEKDAY_ABBREVIATED_NAME = [
        'seg',
        'ter',
        'qua',
        'qui',
        'sex',
        's√°b',
        'dom',
    ]

    MONTH_NAME= [
        'janeiro',
        'fevereiro',
        'mar√ßo',
        'abril',
        'maio',
        'junho',
        'julho',
        'agosto',
        'setembro',
        'outubro',
        'novembro',
        'dezembro',
    ]

    MONTH_ABBREVIATED_NAME = [
        'jan',
        'fev',
        'mar',
        'abr',
        'mai',
        'jun',
        'jul',
        'ago',
        'set',
        'out',
        'nov',
        'dez',
    ]

    ERA_NAME = [
        #
        # Era Humana Sezimal
        #
        'EHS',
        #
        # Antes da Era Humana Sezimal
        #
        'aEHS',
    ]

    DATE_FORMAT = '#d/#m/#Y'
    DATE_LONG_FORMAT = '#-d#O de #M de #Y'
    TIME_FORMAT = '#u:#p:#a'
    DATE_TIME_FORMAT = '#@W, #d/#m/#Y, #u:#p:#a'
    DATE_TIME_LONG_FORMAT = '#W, #-d#O de #M de #Y, #u:#p:#a'
    DST_NAME = 'Hor√°rio de Ver√£o'
    DST_SHORT_NAME = 'HV'
    DEFAULT_TIME_ZONE = 'America/Sao_Paulo'

    DEFAULT_HEMISPHERE = 'S'  # Use 'S' for Southern or 'N' for Northern

    SEASON_NAME = {
        'autumn_cross_quarter': 'Meio do Ver√£o para o Outono',
        'autumn_equinox': 'Outono',
        'winter_cross_quarter': 'Meio do Outono para o Inverno',
        'winter_solstice': 'Inverno',
        'spring_cross_quarter': 'Meio do Inverno para a Primavera',
        'spring_equinox': 'Primavera',
        'summer_cross_quarter': 'Meio da Primavera para o Ver√£o',
        'summer_solstice': 'Ver√£o',
    }

    MOON_PHASE = {
        'new': 'Nova',
        'waxing_crescent': 'Crescente',
        'first_quarter': 'Quarto crescente',
        'waxing_gibbous': 'De quarto crescente para cheia',
        'full': 'Cheia',
        'waning_gibbous': 'De cheia para quarto minguante',
        'third_quarter': 'Quarto minguante',
        'waning_crescent': 'Minguante',
    }

    HOLIDAYS = []
    HOLIDAYS_OTHER_CALENDARS = []

    #
    # Error messages
    #
    ERROR = 'Erro'
    WEEKDAY_ERROR = 'Dia da semana inv√°lido {weekday}'
    MONTH_ERROR = 'M√™s inv√°lido {month}'
    WEEK_NUMBER_SYMBOL = 'sem'

    COLLATION_RULES = '''
[caseFirst upper]
&A<<√Ç<<<·∫¶<<<·∫§<<<·∫¨<<<·∫®<<<·∫™<<√Ä<<√Å<<√É<<√Ñ<<<«û<<ƒÇ<<<·∫∞<<<·∫Æ<<<·∫∂<<<·∫≤<<<·∫¥<<ƒÄ<<«ç<<√Ö<<<«∫<<»¶<<<«†<<ƒÑ<<·∫¢<<·∫†<<»Ä<<»Ç<<·∏Ä<<»∫<<‚±Ø<<‚±≠<<‚±∞ <<< ¬™<<·µÉÃ±<<a<<√¢<<<·∫ß<<<·∫•<<<·∫≠<<<·∫©<<<·∫´<<√†<<√°<<√£<<√§<<<«ü<<ƒÉ<<<·∫±<<<·∫Ø<<<·∫∑<<<·∫≥<<<·∫µ<<ƒÅ<<«é<<√•<<<«ª<<»ß<<<«°<<ƒÖ<<·∫£<<·∫°<<»Å<<»É<<·∏Å<<‚±•<<…ê<<…ë<<…í
&AE<<√Ü
&ae<<√¶
&√ÅE<<«º
&√°e<<«Ω

&B<<·∏Ç<<·∏Ñ<<…É <<< b<<·∏É<<·∏Ö<<∆Ä

&C<<√á<<ƒÜ<<·∏à<<ƒà<<ƒå<<ƒä<<»ª <<< c<<√ß<<ƒá<<·∏â<<ƒâ<<ƒç<<ƒã<<»º
&c<ƒà<<<ƒâ

&D<<ƒé<<·∏ä<<·∏ê<<·∏å<<ƒê <<< d<<ƒè<<·∏ã<<·∏ë<<·∏ç<<ƒë
&DH<<√ê
&dh<<√∞

&E<<√ä<<<·ªÄ<<<·∫æ<<<·ªÜ<<<·ªÇ<<<·ªÑ<<√à<<√â<<·∫º<<√ã<<ƒî<<ƒí<<ƒö<<ƒñ<<»®<<ƒò<<·∫∫<<·∫∏<<…Ü<<∆é<<∆è<<∆ê <<< '\u0026'<<·µâÃ±<<e<<√™<<<·ªÅ<<<·∫ø<<<·ªá<<<·ªÉ<<<·ªÖ<<√®<<√©<<·∫Ω<<√´<<ƒï<<ƒì<<ƒõ<<ƒó<<»©<<ƒô<<·∫ª<<·∫π<<…á<<«ù<<…ô<<…õ

&F<<·∏û <<< f<<·∏ü

&G<<«¥<<ƒû<<«¶<<ƒ†<<ƒ¢<<«§ <<< g<<«µ<<ƒü<<«ß<<ƒ°<<ƒ£<<«•
&g<ƒú<<ƒù

&H<<·∏¶<<»û<<·∏¢<<·∏§<<ƒ¶ <<< h<<·∏ß<<»ü<<·∏£<<·∏•<<ƒß
&h<ƒ§<<ƒ•

&I<<√é<<√å<<√ç<<ƒ®<<√è<<ƒ¨<<ƒ™<<«è<<ƒ∞<<<ùö§<<ƒÆ<<·ªà<<·ªä<<∆ó <<< ‚Å±Ã±<<i<<√Æ<<√¨<<√≠<<ƒ©<<√Ø<<ƒ≠<<ƒ´<<«ê<<ƒ±<<<ùö§<<ƒØ<<·ªâ<<·ªã<<…®

&J<<…à<<∆∑ <<< j<<«∞<<…â<< í
&j<ƒ¥<<ƒµ

&K<<·∏∞<<«®<<ƒ∂<<·∏≤ <<< k<<·∏±<<«©<<ƒ∑<<·∏≥

&L<<ƒπ<<ƒΩ<<ƒø<<ƒª<<·∏∂<<≈Å <<< l<<ƒ∫<<ƒæ<<≈Ä<<ƒº<<·∏∑<<≈Ç

&M<<MÃÄ<<·∏æ<<·πÄ<<·πÇ <<< m<<mÃÄ<<·∏ø<<·πÅ<<·πÉ

&N<<«∏<<≈É<<√ë<<≈á<<≈Ö<<·πÑ<<·πÜ <<< n<<«π<<≈Ñ<<√±<<≈à<<≈Ü<<·πÖ<<·πá
&NG<<≈ä
&ng<<≈ã

&O<<√î<<<·ªí<<<·ªê<<<·ªî<<<·ªñ<<√í<<√ì<<√ï<<<·πå<<<·πé<<<»¨<<√ñ<<<»™<<≈ê<<≈é<<≈å<<<·πê<<<·πí<<«ë<<»Æ<<<»∞<<«™<<<«¨<<·ªé<<∆†<<<·ªú<<<·ªö<<<·ª¢<<<·ªû<<<·ª†<<·ªå<<√ò<<<«æ<<∆Ü <<< ¬∫<<·µíÃ±<<o<<√¥<<<·ªì<<<·ªë<<<·ªô<<<·ªï<<<·ªó<<√≤<<√≥<<√µ<<<·πç<<<·πè<<<»≠<<√∂<<<»´<<≈ë<<≈è<<≈ç<<<·πë<<<·πì<<«í<<»Ø<<<»±<<«´<<<«≠<<·ªè<<∆°<<<·ªù<<<·ªõ<<<·ª£<<<·ªü<<<·ª°<<·ªç<<√∏<<<«ø<<…î
&OE<<≈í<<√ò
&oe<<≈ì<<√∏

&P<<·πî<<·πñ<<‚±£ <<< p<<·πï<<·πó<<·µΩ

&Q <<< q

&R<<≈î<<≈ò<<·πò<<≈ñ<<·πö<<…å <<< r<<≈ï<<≈ô<<·πô<<≈ó<<·πõ<<…ç

&S<<≈ö<<≈†<<·π†<<»ò<<≈û<<·π¢ <<< s<<≈õ<<≈°<<·π°<<»ô<<≈ü<<·π£
&SS<<·∫û
&ss<<√ü
&s<≈ú<<≈ù

&T<<≈§<<·π™<<»ö<<≈¢<<·π¨<<≈¶ <<< t<<·∫ó<<≈•<<·π´<<»õ<<≈£<<·π≠<<≈ß
&TH<<√û
&th<<√æ

&U<<√õ<<√ô<<√ö<<≈®<<<·π∏<<√ú<<<«ï<<<«ó<<<«õ<<<«ô<<≈∞<<≈™<<<·π∫<<«ì<<≈Æ<<≈≤<<·ª¶<<∆Ø<<<·ª™<<<·ª®<<<·ª∞<<<·ª¨<<<·ªÆ<<·ª§<<…Ñ<<∆± <<< ·µòÃ±<<u<<√ª<<√π<<√∫<<≈©<<<·ππ<<√º<<<«ñ<<<«ò<<<«ú<<<«ö<<≈±<<≈´<<<·πª<<«î<<≈Ø<<≈≥<<·ªß<<∆∞<<<·ª´<<<·ª©<<<·ª±<<<·ª≠<<<·ªØ<<·ª•<< â<< ä
&u<≈¨<<≈≠

&V<<·πº<<·πæ <<< v<<·πΩ<<·πø

&W<<≈¥<<·∫Ä<<·∫Ç<<WÃÉ<<·∫Ñ<<·∫Ü<<·∫à<<«∑ <<< w<<≈µ<<·∫Å<<·∫É<<wÃÉ<<·∫Ö<<·∫á<<·∫â<<∆ø

&X<<·∫å<<·∫ä <<< x<<·∫ç<<·∫ã

&Y<<≈∂<<·ª≤<<√ù<<·ª∏<<≈∏<<»≤<<·∫é<<·ª∂<<·ª¥<<…é <<< y<<≈∑<<·ª≥<<√Ω<<·ªπ<<√ø<<»≥<<·∫è<<·ª∑<<·ªµ<<…è

&Z<<·∫ê<<ZÃÄ<<≈π<<≈Ω<<≈ª<<·∫í<<∆µ <<< z<<·∫ë<<zÃÄ<<≈∫<<≈æ<<≈º<<·∫ì<<∆∂
'''

    def day_ordinal_suffix(self, day: SezimalInteger, case: str = None) -> str:
        day = SezimalInteger(day)

        if day == 1:
            return '¬∫'

        return ''

    def _change_word(self, word: str, weekday: SezimalInteger) -> str:
        if weekday >= 10:
            if word == 'essa':
                word = 'esse'
            elif word == 'esta':
                word = 'este'
            elif word == 'aquela':
                word = 'aquele'
            else:
                word = word[:-1] + 'o'

        return word

    def apply_date_format(self, date: SezimalDate, fmt: str) -> str:
        for word in ['A', 'ESSA', 'ESTA', 'AQUELA']:
            if f'#${word}W' in fmt:
                palavra = self._change_word(word.lower(), date.weekday)
                fmt = fmt.replace(f'#${word}W', palavra)

        return fmt
