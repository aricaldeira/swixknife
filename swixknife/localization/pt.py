

__all__ = ('SezimalLocalePT',)


from typing import TypeVar

SezimalDate = TypeVar('SezimalDate', bound='SezimalDate')


from .lokale import SezimalLocale
from ..sezimal import SezimalInteger
from ..base import SEPARATOR_COMMA, SEPARATOR_DOT, \
    SEPARATOR_NARROW_NOBREAK_SPACE, SEPARATOR_COMBINING_DOT_ABOVE_RIGHT


class SezimalLocalePT(SezimalLocale):
    LANG = 'pt'
    LANGUAGE = 'portugu√™s brasileiro'

    SEZIMAL_SEPARATOR = SEPARATOR_COMMA

    GROUP_SEPARATOR = SEPARATOR_DOT
    SUBGROUP_SEPARATOR = SEPARATOR_COMBINING_DOT_ABOVE_RIGHT

    FRACTION_GROUP_SEPARATOR = SEPARATOR_NARROW_NOBREAK_SPACE
    FRACTION_SUBGROUP_SEPARATOR = SEPARATOR_COMBINING_DOT_ABOVE_RIGHT

    CURRENCY_UNIT_SYMBOL = 'R$'
    CURRENCY_SUBUNIT_SYMBOL = '¬¢'

    FIRST_WEEKDAY = 'SUN'

    WEEKDAY_NAME = [
        'segunda-feira',
        'ter√ßa-feira',
        'quarta-feira',
        'quinta-feira',
        'sexta-feira',
        's√°bado',
        'domingo',
    ]

    WEEKDAY_ABBREVIATED_NAME = [
        'seg',
        'ter',
        'qua',
        'qui',
        'sex',
        's√°b',
        'dom',
    ]

    MONTH_NAME= [
        'janeiro',
        'fevereiro',
        'mar√ßo',
        'abril',
        'maio',
        'junho',
        'julho',
        'agosto',
        'setembro',
        'outubro',
        'novembro',
        'dezembro',
    ]

    MONTH_ABBREVIATED_NAME = [
        'jan',
        'fev',
        'mar',
        'abr',
        'mai',
        'jun',
        'jul',
        'ago',
        'set',
        'out',
        'nov',
        'dez',
    ]

    ERA_NAME = [
        #
        # Era Humana Sezimal
        #
        'EHS',
        #
        # Antes da Era Humana Sezimal
        #
        'aEHS',
    ]

    DATE_SEPARATOR = '/'
    DATE_FORMAT = '#d/#m/#Y'
    DATE_LONG_FORMAT = '#-d#O de #M de #Y'
    TIME_FORMAT = '#u:#p:#a'
    DATE_TIME_FORMAT = '#@W, #d/#m/#Y, #u:#p:#a'
    DATE_TIME_LONG_FORMAT = '#W, #-d#O de #M de #Y, #u:#p:#a'
    DST_NAME = 'Hor√°rio de Ver√£o'
    DST_SHORT_NAME = 'HV'
    DEFAULT_TIME_ZONE = 'America/Sao_Paulo'

    DEFAULT_HEMISPHERE = 'S'  # Use 'S' for Southern or 'N' for Northern

    SEASON_NAME = {
        'autumn_cross_quarter': 'Meio do Ver√£o para o Outono',
        'autumn_equinox': 'Outono',
        'winter_cross_quarter': 'Meio do Outono para o Inverno',
        'winter_solstice': 'Inverno',
        'spring_cross_quarter': 'Meio do Inverno para a Primavera',
        'spring_equinox': 'Primavera',
        'summer_cross_quarter': 'Meio da Primavera para o Ver√£o',
        'summer_solstice': 'Ver√£o',
    }

    MOON_PHASE = {
        'new': 'Nova',
        'waxing_crescent': 'Crescente',
        'first_quarter': 'Quarto crescente',
        'waxing_gibbous': 'De quarto crescente para cheia',
        'full': 'Cheia',
        'waning_gibbous': 'De cheia para quarto minguante',
        'third_quarter': 'Quarto minguante',
        'waning_crescent': 'Minguante',
    }

    HOLIDAYS = []
    HOLIDAYS_OTHER_CALENDARS = []

    #
    # Error messages
    #
    ERROR = 'Erro'
    WEEKDAY_ERROR = 'Dia da semana inv√°lido {weekday}'
    MONTH_ERROR = 'M√™s inv√°lido {month}'
    WEEK_NUMBER_SYMBOL = 'sem'
    DAY_NUMBER_SYMBOL = 'dia'

    COLLATION_RULES = '''
[caseFirst upper]
&A<<√Ç<<<·∫¶<<<·∫§<<<·∫¨<<<·∫®<<<·∫™<<√Ä<<√Å<<√É<<√Ñ<<<«û<<ƒÇ<<<·∫∞<<<·∫Æ<<<·∫∂<<<·∫≤<<<·∫¥<<ƒÄ<<«ç<<√Ö<<<«∫<<»¶<<<«†<<ƒÑ<<·∫¢<<·∫†<<»Ä<<»Ç<<·∏Ä<<»∫<<‚±Ø<<‚±≠<<‚±∞ <<< ¬™<<·µÉÃ±<<a<<√¢<<<·∫ß<<<·∫•<<<·∫≠<<<·∫©<<<·∫´<<√†<<√°<<√£<<√§<<<«ü<<ƒÉ<<<·∫±<<<·∫Ø<<<·∫∑<<<·∫≥<<<·∫µ<<ƒÅ<<«é<<√•<<<«ª<<»ß<<<«°<<ƒÖ<<·∫£<<·∫°<<»Å<<»É<<·∏Å<<‚±•<<…ê<<…ë<<…í
&AE<<√Ü
&ae<<√¶
&√ÅE<<«º
&√°e<<«Ω

&B<<·∏Ç<<·∏Ñ<<…É <<< b<<·∏É<<·∏Ö<<∆Ä

&C<<√á<<ƒÜ<<·∏à<<ƒà<<ƒå<<ƒä<<»ª <<< c<<√ß<<ƒá<<·∏â<<ƒâ<<ƒç<<ƒã<<»º
&c<ƒà<<<ƒâ

&D<<ƒé<<·∏ä<<·∏ê<<·∏å<<ƒê <<< d<<ƒè<<·∏ã<<·∏ë<<·∏ç<<ƒë
&DH<<√ê
&dh<<√∞

&E<<√ä<<<·ªÄ<<<·∫æ<<<·ªÜ<<<·ªÇ<<<·ªÑ<<√à<<√â<<·∫º<<√ã<<ƒî<<ƒí<<ƒö<<ƒñ<<»®<<ƒò<<·∫∫<<·∫∏<<…Ü<<∆é<<∆è<<∆ê <<< '\u0026'<<·µâÃ±<<e<<√™<<<·ªÅ<<<·∫ø<<<·ªá<<<·ªÉ<<<·ªÖ<<√®<<√©<<·∫Ω<<√´<<ƒï<<ƒì<<ƒõ<<ƒó<<»©<<ƒô<<·∫ª<<·∫π<<…á<<«ù<<…ô<<…õ

&F<<·∏û <<< f<<·∏ü

&G<<«¥<<ƒû<<«¶<<ƒ†<<ƒ¢<<«§ <<< g<<«µ<<ƒü<<«ß<<ƒ°<<ƒ£<<«•
&g<ƒú<<ƒù

&H<<·∏¶<<»û<<·∏¢<<·∏§<<ƒ¶ <<< h<<·∏ß<<»ü<<·∏£<<·∏•<<ƒß
&h<ƒ§<<ƒ•

&I<<√é<<√å<<√ç<<ƒ®<<√è<<ƒ¨<<ƒ™<<«è<<ƒ∞<<<ùö§<<ƒÆ<<·ªà<<·ªä<<∆ó <<< ‚Å±Ã±<<i<<√Æ<<√¨<<√≠<<ƒ©<<√Ø<<ƒ≠<<ƒ´<<«ê<<ƒ±<<<ùö§<<ƒØ<<·ªâ<<·ªã<<…®

&J<<…à<<∆∑ <<< j<<«∞<<…â<< í
&j<ƒ¥<<ƒµ

&K<<·∏∞<<«®<<ƒ∂<<·∏≤ <<< k<<·∏±<<«©<<ƒ∑<<·∏≥

&L<<ƒπ<<ƒΩ<<ƒø<<ƒª<<·∏∂<<≈Å <<< l<<ƒ∫<<ƒæ<<≈Ä<<ƒº<<·∏∑<<≈Ç

&M<<MÃÄ<<·∏æ<<·πÄ<<·πÇ <<< m<<mÃÄ<<·∏ø<<·πÅ<<·πÉ

&N<<«∏<<≈É<<√ë<<≈á<<≈Ö<<·πÑ<<·πÜ <<< n<<«π<<≈Ñ<<√±<<≈à<<≈Ü<<·πÖ<<·πá
&NG<<≈ä
&ng<<≈ã

&O<<√î<<<·ªí<<<·ªê<<<·ªî<<<·ªñ<<√í<<√ì<<√ï<<<·πå<<<·πé<<<»¨<<√ñ<<<»™<<≈ê<<≈é<<≈å<<<·πê<<<·πí<<«ë<<»Æ<<<»∞<<«™<<<«¨<<·ªé<<∆†<<<·ªú<<<·ªö<<<·ª¢<<<·ªû<<<·ª†<<·ªå<<√ò<<<«æ<<∆Ü <<< ¬∫<<·µíÃ±<<o<<√¥<<<·ªì<<<·ªë<<<·ªô<<<·ªï<<<·ªó<<√≤<<√≥<<√µ<<<·πç<<<·πè<<<»≠<<√∂<<<»´<<≈ë<<≈è<<≈ç<<<·πë<<<·πì<<«í<<»Ø<<<»±<<«´<<<«≠<<·ªè<<∆°<<<·ªù<<<·ªõ<<<·ª£<<<·ªü<<<·ª°<<·ªç<<√∏<<<«ø<<…î
&OE<<≈í<<√ò
&oe<<≈ì<<√∏

&P<<·πî<<·πñ<<‚±£ <<< p<<·πï<<·πó<<·µΩ

&Q <<< q

&R<<≈î<<≈ò<<·πò<<≈ñ<<·πö<<…å <<< r<<≈ï<<≈ô<<·πô<<≈ó<<·πõ<<…ç

&S<<≈ö<<≈†<<·π†<<»ò<<≈û<<·π¢ <<< s<<≈õ<<≈°<<·π°<<»ô<<≈ü<<·π£
&SS<<·∫û
&ss<<√ü
&s<≈ú<<≈ù

&T<<≈§<<·π™<<»ö<<≈¢<<·π¨<<≈¶ <<< t<<·∫ó<<≈•<<·π´<<»õ<<≈£<<·π≠<<≈ß
&TH<<√û
&th<<√æ

&U<<√õ<<√ô<<√ö<<≈®<<<·π∏<<√ú<<<«ï<<<«ó<<<«õ<<<«ô<<≈∞<<≈™<<<·π∫<<«ì<<≈Æ<<≈≤<<·ª¶<<∆Ø<<<·ª™<<<·ª®<<<·ª∞<<<·ª¨<<<·ªÆ<<·ª§<<…Ñ<<∆± <<< ·µòÃ±<<u<<√ª<<√π<<√∫<<≈©<<<·ππ<<√º<<<«ñ<<<«ò<<<«ú<<<«ö<<≈±<<≈´<<<·πª<<«î<<≈Ø<<≈≥<<·ªß<<∆∞<<<·ª´<<<·ª©<<<·ª±<<<·ª≠<<<·ªØ<<·ª•<< â<< ä
&u<≈¨<<≈≠

&V<<·πº<<·πæ <<< v<<·πΩ<<·πø

&W<<≈¥<<·∫Ä<<·∫Ç<<WÃÉ<<·∫Ñ<<·∫Ü<<·∫à<<«∑ <<< w<<≈µ<<·∫Å<<·∫É<<wÃÉ<<·∫Ö<<·∫á<<·∫â<<∆ø

&X<<·∫å<<·∫ä <<< x<<·∫ç<<·∫ã

&Y<<≈∂<<·ª≤<<√ù<<·ª∏<<≈∏<<»≤<<·∫é<<·ª∂<<·ª¥<<…é <<< y<<≈∑<<·ª≥<<√Ω<<·ªπ<<√ø<<»≥<<·∫è<<·ª∑<<·ªµ<<…è

&Z<<·∫ê<<ZÃÄ<<≈π<<≈Ω<<≈ª<<·∫í<<∆µ <<< z<<·∫ë<<zÃÄ<<≈∫<<≈æ<<≈º<<·∫ì<<∆∂
'''

    def day_ordinal_suffix(self, day: SezimalInteger, case: str = None) -> str:
        day = SezimalInteger(day)

        if day == 1:
            return '¬∫'

        return ''

    def _change_word(self, word: str, weekday: SezimalInteger) -> str:
        if weekday >= 10:
            if word == 'essa':
                word = 'esse'
            elif word == 'esta':
                word = 'este'
            elif word == 'aquela':
                word = 'aquele'
            else:
                word = word[:-1] + 'o'

        return word

    def apply_date_format(self, date: SezimalDate, fmt: str) -> str:
        for word in ['A', 'ESSA', 'ESTA', 'AQUELA']:
            if f'#${word}W' in fmt:
                palavra = self._change_word(word.lower(), date.weekday)
                fmt = fmt.replace(f'#${word}W', palavra)

        return fmt

    TITLE_ALWAYS_LOWERCASE_WORDS = [
        'e',
        'o',
        'os',
        'a',
        'as',
        'um',
        'uns',
        'uma',
        'umas',
        'de',
        'do',
        'dos',
        'da',
        'das',
        'dum',
        'duns',
        'duma',
        'dumas',
        'em',
        'no',
        'nos',
        'na',
        'nas',
        'num',
        'nuns',
        'numa',
        'numas',
        'com',
        'para',
        'que',
        'a',
        'ao',
        'aos',
        '√†',
        '√†s',
        'at√©',
        'por',
        'pelo',
        'pelos',
        'pela',
        'pelas',
        'sob',
        'entre',
        'ou',
        'n√£o',
        #
        # Nomes estrangeiros
        #
        'al',
        'el',
        'ul',
        'il',
        'ibn',
        'ibnat',
        'bin',
        'bint',
        'ben',
        'bat',
        'fi',
        'd',
        'di',
        'dell',
        'dello',
        'della',
        'dalla',
        'del',
        'dal',
        'dall',
        'in',
        'con',
        'su',
        'per',
        'fra',
        'tra',
        'nel',
        'nell',
        'nello',
        'nella',
        'and',
        'at',
        'upon',
        'by',
        'in',
        'aus',
        'auf',
        'von',
        '√ºber',
        'uber',
        'der',
        'die',
        'dem',
        'den',
        'van',
        'en',
        'sur',
        'et',
        'le',
        'la',
        'les',
        'du',
        'des',
        'y',
        'u',
    ]
    TITLE_ALWAYS_UPPERCASE_WORDS = []

    CALENDAR_TYPE = {
        #
        # Civil calendars
        #
        'SEZ': 'Sezimal',
        'SYM': 'Sim√©trico',
        'ISO': 'Gregoriano',
        'DCC': 'Quantos‚ÄêDias',
        'ADC': 'Quantos‚ÄêDias Astron√¥mico',
        'ISR': 'Israelense',
        'IND': 'Indiano',

        #
        # Religious calendars
        #
        'JUL': 'Ortodoxo/Juliano',
        'JEW': 'Judaico',
        'HIJ': 'Isl√¢mico',
        'IRN': 'Isl√¢mico Solar',

        #
        # Easter referencial
        #
        'SEZ+EASTER': 'P√°scoa Sezimal - 11 de abril',
        'SYM+EASTER': 'P√°scoa Sim√©trica - 7 de abril',
        'ISO+EASTER': 'P√°scoa (Gregoriano)',
        'JUL+EASTER': 'P√°scoa Ortodoxa (Juliano)',
        'JEW+EASTER': 'P√°scoa Judaica (P√™ssach)',
    }

    CALENDAR_TYPE_ABBREVIATION = {
        #
        # Civil calendars
        #
        'SEZ': 'Sez.',
        'SYM': 'Sim.',
        'ISO': 'Gre.',
        'DCC': 'Q.D.',
        'ADC': 'Q.D.A.',
        'ISR': 'Isr.',
        'IND': 'Ind.',
        #
        # Religious calendars
        #
        'JUL': 'Jul.',
        'JEW': 'Jud.',
        'HIJ': 'Isl.',
        'IRN': 'Irn.',
    }

    CALENDAR_DATE_ERROR = 'Data inv√°lida para o calend√°rio {calendar_type}'
    CALENDAR_TIME_ERROR = 'Hor√°rio inv√°lido'
    CALENDAR_TIME_AFTER_ERROR = 'Hor√°rio inv√°lido: o hor√°rio de in√≠cio do evento n√£o pode vir depois do hor√°rio final'

    JEWISH_CALENDAR_MONTH_NAME = [
        # 'Nisan ◊†◊ô◊°◊ü',
        # 'Iyyar ◊ê◊ô◊ô◊®‚Äé',
        # 'Sivan ◊°◊ô◊ï◊ü‚Äé',
        # 'Tammuz ◊™◊û◊ï◊ñ‚Äé',
        # 'Av ◊ê◊ë',
        # 'Elul ◊ê◊ú◊ï◊ú‚Äé',
        # 'Tishri ◊™◊©◊®◊ô‚Äé',
        # 'Heshvan ◊ó◊©◊ï◊ï◊ü',
        # 'Kislev ◊õ◊°◊ú◊ï',
        # 'Tevet ◊ò◊ë◊™',
        # 'Shevat ◊©◊ë◊ò',
        # 'Adar ◊ê◊ì◊®',
        # 'Adar bet ◊ê◊ì◊® ◊ë◊≥',
        'Nissan',
        'Iyar',
        'Sivan',
        'Tamuz',
        'Av',
        'Elul',
        'Tishrei',
        'Cheshvan',
        'Kisl√™v',
        'Tev√™t',
        'Shevat',
        'Adar I',
        'Adar II',
    ]

    JEWISH_CALENDAR_MONTH_ABBREVIATED_NAME = [
        'Nis',
        'Iya',
        'Siv',
        'Tam',
        'Av',
        'Elu',
        'Tis',
        'Che',
        'Kis',
        'Tev',
        'She',
        'Ad1',
        'Ad2',
    ]

    HIJRI_CALENDAR_MONTH_NAME = [
        # 'Al-mu·∏•arram ÿßŸÑŸÖÿ≠ÿ±ŸÖ',
        # '·π¢afar ÿµŸÅÿ±',
        # 'Rabƒ´ ø al- æawwal ÿ±ÿ®Ÿäÿπ ÿßŸÑÿ£ŸàŸÑ',
        # 'Rabƒ´ ø al- æƒÅkhir ÿ±ÿ®Ÿäÿπ ÿßŸÑÿ¢ÿÆÿ±',
        # 'JumƒÅdƒÅ al- æ≈´lƒÅ ÿ¨ŸÖÿßÿØŸâ ÿßŸÑÿ£ŸàŸÑŸâ',
        # 'JumƒÅdƒÅ al- æƒÅkhirah ÿ¨ŸÖÿßÿØŸâ ÿßŸÑÿ¢ÿÆÿ±ÿ©',
        # 'Rajab ÿ±ÿ¨ÿ®',
        # 'Sha øbƒÅn ÿ¥ÿπÿ®ÿßŸÜ',
        # 'Rama·∏çƒÅn ÿ±ŸÖÿ∂ÿßŸÜ',
        # 'ShawwƒÅl ÿ¥ŸàÿßŸÑ',
        # '·∏é≈´ al-qa ødah ÿ∞Ÿà ÿßŸÑŸÇÿπÿØÿ©',
        # '·∏é≈´ al-·∏•ijjah ÿ∞Ÿà ÿßŸÑÿ≠ÿ¨ÿ©',
        'Murrar√£',
        'S√°far',
        'Rabi Alual',
        'Rabi Atani',
        'Jumada Alual',
        'Jumada Atani',
        'Rajabe',
        'Xab√£',
        'Ramad√£',
        'Xaual',
        'Dulcada',
        'Dulrija',
    ]

    HIJRI_CALENDAR_MONTH_ABBREVIATED_NAME = [
        'Mur',
        'S√°f',
        'Rb1',
        'Rb2',
        'Jm1',
        'Jm2',
        'Raj',
        'Xab',
        'Ram',
        'Xau',
        'Dcd',
        'Drj',
    ]

    DCC_TERM_NAME = [
        'bimestre‚Äêzero',
        'bimestre‚Äêum',
        'bimestre‚Äêdois',
        'bimestre‚Äêtr√™s',
        'bimestre‚Äêquatro',
    ]

    DCC_TERM_ABBREVIATED_NAME = [
        'B0',
        'B1',
        'B2',
        'B3',
        'B4',
    ]

    DCC_MONTH_NAME = [
        'm√™s‚Äêzero',
        'm√™s‚Äêum',
        'm√™s‚Äêdois',
        'm√™s‚Äêtr√™s',
        'm√™s‚Äêquatro',
        'm√™s‚Äêcinco',
        'm√™s‚Äêseis',
        'm√™s‚Äêseis‚Äêe‚Äêum',
        'm√™s‚Äêseis‚Äêe‚Äêdois',
        'm√™s‚Äêseis‚Äêe‚Äêtr√™s',
        'm√™s‚Äêseis‚Äêe‚Äêquatro',
    ]

    DCC_WEEKDAY_NAME = [
        'dia‚Äêda‚Äêsemana‚Äêzero',
        'dia‚Äêda‚Äêsemana‚Äêum',
        'dia‚Äêda‚Äêsemana‚Äêdois',
        'dia‚Äêda‚Äêsemana‚Äêtr√™s',
        'dia‚Äêda‚Äêsemana‚Äêquatro',
        'dia‚Äêda‚Äêsemana‚Äêcinco',
    ]

    DCC_WEEKDAY_ABBREVIATED_NAME = [
        'DS0',
        'DS1',
        'DS2',
        'DS3',
        'DS4',
        'DS5',
    ]

    DCC_NUMBER = [
        'zero',
        'um',
        'dois',
        'tr√™s',
        'quatro',
        'cinco',
        'seis',
        'seis‚Äêe‚Äêum',
        'seis‚Äêe‚Äêdois',
        'seis‚Äêe‚Äêtr√™s',
        'seis‚Äêe‚Äêquatro',
    ]

    DCC_YEAR_COUNT = {
        None: '&>Y‚ÄØanos',
        SezimalInteger('1'): '&>Y‚ÄØano',
    }

    DCC_TERM_COUNT = {
        None: '&-t‚ÄØbimestres',
        SezimalInteger('1'): '&-t‚ÄØbimestre',
    }

    DCC_MONTH_COUNT = {
        None: '&-m‚ÄØmeses',
        SezimalInteger('1'): '&-m‚ÄØm√™s',
    }

    DCC_WEEK_COUNT = {
        None: '&-w‚ÄØsemanas',
        SezimalInteger('1'): '&-w‚ÄØsemana',
    }

    DCC_DAY_COUNT = {
        None: '&-d‚ÄØdias',
        SezimalInteger('1'): '&-d‚ÄØdia',
    }

    DCC_DATE_MONTH_DAY_SEPARATOR = ' e '

    ADC_MONTH_NAME = [
        'peixes',
        'baleia',
        'rio',
        'unic√≥rnio',
        'hidra',
        'le√£o',
        'virgem',
        'serpente',
        '√°guia',
        'aqu√°rio',
        'libra',
    ]

    ADC_MONTH_ABBREVIATED_NAME = [
        'pei',
        'bal',
        'rio',
        'uni',
        'hid',
        'le√£',
        'vir',
        'ser',
        '√°gu',
        'aqu',
        'lib',
    ]

    ADC_MONTH_SYMBOL = [
        'P',
        'B',
        'R',
        'U',
        'H',
        'L',
        'V',
        'S',
        '√Å',
        'A',
        'L',
    ]

    ADC_WEEKDAY_NAME = [
        'sol',
        # 'merc√∫rio',
        'v√™nus',
        'marte',
        'j√∫piter',
        'saturno',
        'lua',
    ]

    ADC_WEEKDAY_ABBREVIATED_NAME = [
        'sol',
        # 'mer',
        'v√™n',
        'mar',
        'j√∫p',
        'sat',
        'lua',
    ]
